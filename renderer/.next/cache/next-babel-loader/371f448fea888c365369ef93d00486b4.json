{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan Marchant\\\\Documents\\\\CCard\\\\code\\\\ccardApp\\\\renderer\\\\components\\\\ImportBtn.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst ImportBtn = () => {\n  const router = useRouter();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const file = e.target.file.files[0];\n    const name = file.name.slice(0, -4);\n    var reader = new FileReader();\n    reader.readAsText(file);\n\n    reader.onload = async function (evt) {\n      const res = await axios.post(`${process.env.NEXT_PUBLIC_API_URL}/import/?name=${name}`, evt.target.result, {\n        headers: {\n          \"Content-Type\": \"text/csv\"\n        }\n      });\n\n      if (res.data.status === \"ok\") {\n        setOpen(false);\n        router.push({\n          pathname: \"/import\",\n          query: {\n            id: res.data.id,\n            name\n          }\n        });\n      }\n    };\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Import\"), __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Import CSV\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    required: true,\n    name: \"file\",\n    type: \"file\",\n    accept: \".csv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Upload\")))));\n};\n\nexport default ImportBtn;","map":{"version":3,"sources":["C:/Users/Evan Marchant/Documents/CCard/code/ccardApp/renderer/components/ImportBtn.js"],"names":["useRouter","axios","Button","Dialog","DialogActions","DialogContent","DialogTitle","ImportBtn","router","open","setOpen","React","useState","handleClickOpen","handleClose","handleSubmit","e","preventDefault","file","target","files","name","slice","reader","FileReader","readAsText","onload","evt","res","post","process","env","NEXT_PUBLIC_API_URL","result","headers","data","status","push","pathname","query","id"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst ImportBtn = () => {\n  const router = useRouter();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const file = e.target.file.files[0];\n    const name = file.name.slice(0, -4);\n\n    var reader = new FileReader();\n\n    reader.readAsText(file);\n\n    reader.onload = async function (evt) {\n      const res = await axios.post(\n        `${process.env.NEXT_PUBLIC_API_URL}/import/?name=${name}`,\n        evt.target.result,\n        {\n          headers: {\n            \"Content-Type\": \"text/csv\",\n          },\n        }\n      );\n\n      if (res.data.status === \"ok\") {\n        setOpen(false);\n        router.push({\n          pathname: \"/import\",\n          query: { id: res.data.id, name },\n        });\n      }\n    };\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Import\n      </Button>\n\n      {/* popup for file uploading */}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Import CSV</DialogTitle>\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <input required name=\"file\" type=\"file\" accept=\".csv\" />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"default\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Upload\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ImportBtn;\n"]},"metadata":{},"sourceType":"module"}