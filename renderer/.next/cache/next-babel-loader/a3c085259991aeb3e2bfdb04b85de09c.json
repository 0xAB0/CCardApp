{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Evan Marchant\\\\Documents\\\\CCard\\\\code\\\\ccardApp\\\\renderer\\\\components\\\\ImportBtn.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nvar ImportBtn = function ImportBtn() {\n  _s();\n\n  var router = useRouter();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var file = e.target.file.files[0];\n    var name = file.name.slice(0, -4);\n    var reader = new FileReader();\n    reader.readAsText(file);\n\n    reader.onload = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL, \"/import/?name=\").concat(name), evt.target.result, {\n                  headers: {\n                    \"Content-Type\": \"text/csv\"\n                  }\n                });\n\n              case 2:\n                res = _context.sent;\n\n                if (res.data.status === \"ok\") {\n                  setOpen(false);\n                  router.push({\n                    pathname: \"/import\",\n                    query: {\n                      id: res.data.id,\n                      name: name\n                    }\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Import\"), __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(DialogTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Import CSV\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    required: true,\n    name: \"file\",\n    type: \"file\",\n    accept: \".csv\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), __jsx(DialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    color: \"default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Upload\")))));\n};\n\n_s(ImportBtn, \"3ICdGKhN+Gn+QPufauf1+BeiWG8=\", false, function () {\n  return [useRouter];\n});\n\n_c = ImportBtn;\nexport default ImportBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportBtn\");","map":{"version":3,"sources":["C:/Users/Evan Marchant/Documents/CCard/code/ccardApp/renderer/components/ImportBtn.js"],"names":["useRouter","axios","Button","Dialog","DialogActions","DialogContent","DialogTitle","ImportBtn","router","React","useState","open","setOpen","handleClickOpen","handleClose","handleSubmit","e","preventDefault","file","target","files","name","slice","reader","FileReader","readAsText","onload","evt","post","process","env","NEXT_PUBLIC_API_URL","result","headers","res","data","status","push","pathname","query","id"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst ImportBtn = () => {\n  const router = useRouter();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const file = e.target.file.files[0];\n    const name = file.name.slice(0, -4);\n\n    var reader = new FileReader();\n\n    reader.readAsText(file);\n\n    reader.onload = async function (evt) {\n      const res = await axios.post(\n        `${process.env.NEXT_PUBLIC_API_URL}/import/?name=${name}`,\n        evt.target.result,\n        {\n          headers: {\n            \"Content-Type\": \"text/csv\",\n          },\n        }\n      );\n\n      if (res.data.status === \"ok\") {\n        setOpen(false);\n        router.push({\n          pathname: \"/import\",\n          query: { id: res.data.id, name },\n        });\n      }\n    };\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Import\n      </Button>\n\n      {/* popup for file uploading */}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Import CSV</DialogTitle>\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <input required name=\"file\" type=\"file\" accept=\".csv\" />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"default\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Upload\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ImportBtn;\n"]},"metadata":{},"sourceType":"module"}