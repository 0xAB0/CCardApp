{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nvar fetchDetailsData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(type, statement, start, end) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(process.env.NEXT_PUBLIC_API_URL, \"/details/data?\").concat(type === \"date\" && end !== \"\" ? \"start=\".concat(start, \"&end=\").concat(end) : \"statement=\".concat(statement)));\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data.rows);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchDetailsData(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar DetailsTable = function DetailsTable(_ref2) {\n  var type = _ref2.type,\n      statement = _ref2.statement,\n      start = _ref2.start,\n      end = _ref2.end;\n\n  var _useQuery = useQuery([type, statement, start, end], fetchDetailsData),\n      rows = _useQuery.data,\n      error = _useQuery.error,\n      isLoading = _useQuery.isLoading;\n\n  if (isLoading) return \"Loading...\";\n  if (error) return \"An error has occurred: \" + error.message;\n  return __jsx(TableContainer, {\n    style: {\n      maxHeight: 400\n    }\n  }, __jsx(Table, {\n    stickyHeader: true\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, null, \"Date\"), __jsx(TableCell, null, \"Description\"), __jsx(TableCell, null, \"Amount\"), __jsx(TableCell, null, \"Category\"))), __jsx(TableBody, null, rows.map(function (row) {\n    return __jsx(TableRow, {\n      key: row.rowId\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\"\n    }, row.date), __jsx(TableCell, null, row.description), __jsx(TableCell, null, row.amount), __jsx(TableCell, null, row.category));\n  }))));\n};\n\nexport default DetailsTable;","map":null,"metadata":{},"sourceType":"module"}