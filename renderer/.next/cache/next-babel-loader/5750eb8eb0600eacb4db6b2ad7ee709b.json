{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from \"next/link\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport TimeSeriesLineGraph from \"../components/TimeSeriesLineGraph\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(1)\n  },\n  controls: {\n    \"& > *\": {\n      marginBottom: theme.spacing(2)\n    }\n  }\n}));\n\nconst fetchStatementList = async () => {\n  const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/statement/list`);\n  return res.data;\n};\n\nexport default function Home() {\n  const classes = useStyles();\n  const {\n    data: statementList,\n    isLoading\n  } = useQuery(\"statementList\", fetchStatementList);\n  const defaultValues = {\n    type: \"statement\",\n    statement: \"July%202020\",\n    start: \"\",\n    end: \"\",\n    breakdown: \"all\",\n    resolution: \"day\"\n  };\n  const [formData, setFormData] = React.useState(defaultValues);\n  const [query, setQuery] = React.useState(defaultValues);\n  const {\n    type,\n    statement,\n    start,\n    end,\n    breakdown,\n    resolution\n  } = formData;\n\n  const handleChange = e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(formData);\n  };\n\n  return !isLoading && __jsx(Container, {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    gutterBottom: true\n  }, \"Overview\"), __jsx(Grid, {\n    container: true,\n    style: {\n      height: \"70vh\"\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    className: classes.controls\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    fullWidth: true\n  }, __jsx(RadioGroup, {\n    row: true,\n    name: \"type\",\n    value: type,\n    onChange: handleChange\n  }, __jsx(FormControlLabel, {\n    value: \"statement\",\n    control: __jsx(Radio, {\n      color: \"primary\"\n    }),\n    label: \"Statement\"\n  }), __jsx(FormControlLabel, {\n    value: \"date\",\n    control: __jsx(Radio, {\n      color: \"primary\"\n    }),\n    label: \"Date\"\n  })))), __jsx(Grid, {\n    item: true\n  }, type === \"statement\" ? __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\"\n  }, __jsx(InputLabel, null, \"Statement\"), __jsx(Select, {\n    name: \"statement\",\n    value: statement,\n    onChange: handleChange,\n    label: \"Statement\"\n  }, statementList.map(statement => __jsx(MenuItem, {\n    key: statement,\n    value: encodeURIComponent(statement.trim())\n  }, statement)))) : __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    className: classes.controls\n  }, __jsx(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    size: \"small\",\n    variant: \"outlined\",\n    label: \"Start Date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    name: \"start\",\n    value: start,\n    onChange: handleChange\n  }), __jsx(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    size: \"small\",\n    variant: \"outlined\",\n    label: \"End Date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    name: \"end\",\n    value: end,\n    onChange: handleChange\n  }))), __jsx(Grid, {\n    item: true\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\"\n  }, __jsx(InputLabel, null, \"Breakdown\"), __jsx(Select, {\n    label: \"Breakdown\",\n    name: \"breakdown\",\n    value: breakdown,\n    onChange: handleChange\n  }, __jsx(MenuItem, {\n    value: \"all\"\n  }, \"All\"), __jsx(MenuItem, {\n    value: \"category\"\n  }, \"Category\")))), __jsx(Grid, {\n    item: true\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\"\n  }, __jsx(InputLabel, null, \"Resolution\"), __jsx(Select, {\n    label: \"Resolution\",\n    name: \"resolution\",\n    value: resolution,\n    onChange: handleChange\n  }, __jsx(MenuItem, {\n    value: \"day\"\n  }, \"Day\"), __jsx(MenuItem, {\n    value: \"month\"\n  }, \"Month\"), __jsx(MenuItem, {\n    value: \"year\"\n  }, \"Year\")))), __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: \"outlined\"\n  }, \"Apply\")), __jsx(Grid, {\n    item: true\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/xray\",\n      query: {\n        type,\n        statement,\n        start,\n        end\n      }\n    },\n    passHref: true\n  }, __jsx(Button, {\n    color: \"primary\",\n    variant: \"contained\"\n  }, \"XRay\")))))), __jsx(Grid, {\n    item: true,\n    xs: 10\n  }, __jsx(TimeSeriesLineGraph, {\n    query: query\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}