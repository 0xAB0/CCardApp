{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst fetchSummaryData = async (name, type, statement, start, end) => {\n  const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/summary/${name}?${type === \"date\" && end !== \"\" ? `start=${start}&end=${end}` : `statement=${statement}`}`);\n  return res.data;\n};\n\nconst SummaryTable = ({\n  name,\n  type,\n  statement,\n  start,\n  end\n}) => {\n  const {\n    data: rows,\n    error,\n    isLoading\n  } = useQuery([name, type, statement, start, end], fetchSummaryData);\n  if (isLoading) return \"Loading...\";\n  if (error) return \"An error has occurred: \" + error.message;\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true\n  }, name), __jsx(TableContainer, {\n    component: Paper,\n    style: {\n      width: 250\n    }\n  }, __jsx(Table, {\n    size: \"small\"\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, null, \"Name\"), __jsx(TableCell, null, \"Value\"))), __jsx(TableBody, null, rows.map((row, index) => __jsx(TableRow, {\n    key: index\n  }, __jsx(TableCell, null, row.name), __jsx(TableCell, null, row.value)))))));\n};\n\nexport default SummaryTable;","map":null,"metadata":{},"sourceType":"module"}