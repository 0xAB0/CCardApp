{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nvar ImportBtn = function ImportBtn() {\n  var router = useRouter();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var file = e.target.file.files[0];\n    var name = file.name.slice(0, -4);\n    var reader = new FileReader();\n    reader.readAsText(file);\n\n    reader.onload = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL, \"/import/?name=\").concat(name), evt.target.result, {\n                  headers: {\n                    \"Content-Type\": \"text/csv\"\n                  }\n                });\n\n              case 2:\n                res = _context.sent;\n\n                if (res.data.status === \"ok\") {\n                  setOpen(false);\n                  router.push({\n                    pathname: \"/import\",\n                    query: {\n                      id: res.data.id,\n                      name: name\n                    }\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen\n  }, \"Import\"), __jsx(Dialog, {\n    open: open,\n    onClose: handleClose\n  }, __jsx(DialogTitle, null, \"Import CSV\"), __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(DialogContent, null, __jsx(\"input\", {\n    required: true,\n    name: \"file\",\n    type: \"file\",\n    accept: \".csv\"\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"default\"\n  }, \"Cancel\"), __jsx(Button, {\n    type: \"submit\",\n    color: \"primary\"\n  }, \"Upload\")))));\n};\n\nexport default ImportBtn;","map":null,"metadata":{},"sourceType":"module"}